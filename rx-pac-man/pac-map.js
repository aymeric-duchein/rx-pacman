// 28 * 31
const MAP_MATRIX = [
    [1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1],
    [1,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,1],
    [1,0,1,1,1,1,0,1,1,1,1,1,0,1,1,0,1,1,1,1,1,0,1,1,1,1,0,1],
    [1,0,1,1,1,1,0,1,1,1,1,1,0,1,1,0,1,1,1,1,1,0,1,1,1,1,0,1],
    [1,0,1,1,1,1,0,1,1,1,1,1,0,1,1,0,1,1,1,1,1,0,1,1,1,1,0,1],
    [1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1],
    [1,0,1,1,1,1,0,1,1,0,1,1,1,1,1,1,1,1,0,1,1,0,1,1,1,1,0,1],
    [1,0,1,1,1,1,0,1,1,0,1,1,1,1,1,1,1,1,0,1,1,0,1,1,1,1,0,1],
    [1,0,0,0,0,0,0,1,1,0,0,0,0,1,1,0,0,0,0,1,1,0,0,0,0,0,0,1],
    [1,1,1,1,1,1,0,1,1,1,1,1,0,1,1,0,1,1,1,1,1,0,1,1,1,1,1,1],
    [1,1,1,1,1,1,0,1,1,1,1,1,0,1,1,0,1,1,1,1,1,0,1,1,1,1,1,1],
    [1,1,1,1,1,1,0,1,1,0,0,0,0,0,0,0,0,0,0,1,1,0,1,1,1,1,1,1],
    [1,1,1,1,1,1,0,1,1,0,2,2,2,3,3,2,2,2,0,1,1,0,1,1,1,1,1,1],
    [1,1,1,1,1,1,0,1,1,0,2,4,4,4,4,4,4,2,0,1,1,0,1,1,1,1,1,1],
    [0,0,0,0,0,0,0,0,0,0,2,4,4,4,4,4,4,2,0,0,0,0,0,0,0,0,0,0],
    [1,1,1,1,1,1,0,1,1,0,2,4,4,4,4,4,4,2,0,1,1,0,1,1,1,1,1,1],
    [1,1,1,1,1,1,0,1,1,0,2,2,2,2,2,2,2,2,0,1,1,0,1,1,1,1,1,1],
    [1,1,1,1,1,1,0,1,1,0,0,0,0,0,0,0,0,0,0,1,1,0,1,1,1,1,1,1],
    [1,1,1,1,1,1,0,1,1,0,1,1,1,1,1,1,1,1,0,1,1,0,1,1,1,1,1,1],
    [1,1,1,1,1,1,0,1,1,0,1,1,1,1,1,1,1,1,0,1,1,0,1,1,1,1,1,1],
    [1,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,1],
    [1,0,1,1,1,1,0,1,1,1,1,1,0,1,1,0,1,1,1,1,1,0,1,1,1,1,0,1],
    [1,0,1,1,1,1,0,1,1,1,1,1,0,1,1,0,1,1,1,1,1,0,1,1,1,1,0,1],
    [1,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,1],
    [1,1,1,0,1,1,0,1,1,0,1,1,1,1,1,1,1,1,0,1,1,0,1,1,0,1,1,1],
    [1,1,1,0,1,1,0,1,1,0,1,1,1,1,1,1,1,1,0,1,1,0,1,1,0,1,1,1],
    [1,0,0,0,0,0,0,1,1,0,0,0,0,1,1,0,0,0,0,1,1,0,0,0,0,0,0,1],
    [1,0,1,1,1,1,1,1,1,1,1,1,0,1,1,0,1,1,1,1,1,1,1,1,1,1,0,1],
    [1,0,1,1,1,1,1,1,1,1,1,1,0,1,1,0,1,1,1,1,1,1,1,1,1,1,0,1],
    [1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1],
    [1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1],
];

function drawMap(gridPixelSize) {
    let rowIndex = 0;
    for(let row of MAP_MATRIX) {
        let columnIndex = 0;
        for(let value of row) {
            switch (value) {
                case 0:
                    fill(0,0,0);
                    stroke(0,0,0);
                    rect(columnIndex * gridPixelSize, rowIndex * gridPixelSize, gridPixelSize, gridPixelSize);
                    break;
                case 1:
                    fill(20,20,200);
                    stroke(20,20,200);
                    rect(columnIndex * gridPixelSize, rowIndex * gridPixelSize, gridPixelSize, gridPixelSize);
                    break;
                case 2:
                    fill(80,80,200);
                    stroke(80,80,200);
                    rect(columnIndex * gridPixelSize, rowIndex * gridPixelSize, gridPixelSize, gridPixelSize);
                    break;
                case 3:
                    fill(255,255,25);
                    stroke(255,255,255);
                    rect(columnIndex * gridPixelSize, rowIndex * gridPixelSize, gridPixelSize, gridPixelSize);
                    break;
            }
            columnIndex++;
        }
        rowIndex++;
    }
}

function getOpenSpot() {
    let column = Math.floor(Math.random() * 27), row = Math.floor(Math.random() * 30);
    while (MAP_MATRIX[row][column] !== 0) {
        column = Math.floor(Math.random() * 27);
        row = Math.floor(Math.random() * 30);
    }
    return {column,row}
}

function drawOpenSpot({row, column}, gridPixelSize, r = 200, g= 50, b = 50, diff = 5) {
    fill(r,g,b);
    stroke(r,g,b);
    rect(column * gridPixelSize + diff, row * gridPixelSize + diff, gridPixelSize -  2 * diff, gridPixelSize - 2 * diff);
}